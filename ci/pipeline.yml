---

resource_types:
- name: http-api
  type: registry-image
  source:
    repository: containers.dev.maio.me/concourse/http-api-resource
    tag: latest

resources:
- name: commons
  type: git
  icon: git
  source:
    .: (( inject meta.upstream.commons ))

- name: source
  type: git
  icon: git
  source:
    .: (( inject meta.repository.source ))

- name: python
  type: registry-image
  icon: docker
  source:
    repository: (( grab meta.upstream.python.repo ))
    tag: (( grab meta.upstream.python.tag ))
    .: (( inject meta.upstream.python.auth ))

- name: (( grab meta.name ))
  type: registry-image
  icon: docker
  source:
    repository: (( grab meta.registry.image.repo ))
    tag: (( grab meta.registry.image.tag ))
    .: (( inject meta.registry.auth ))

- name: deploy
  type: http-api
  source:
    uri: "(( grab meta.deploy.webhook_url ))"
    method: "POST"

jobs:
- name: "build"
  public: true
  plan:
  - get: commons
  - get: source
    trigger: true
  - get: python
    trigger: true
  - task: "build image"
    file: (( grab meta.tasks.img-build-oci ))
    privileged: true
    input_mapping: {context: source}
    params:
      CONTEXT: (( grab meta.registry.image.context ))
      BUILD_ARG_PYTHON_REPO: (( grab meta.upstream.python.repo ))
      BUILD_ARG_PYTHON_TAG: (( grab meta.upstream.python.tag ))
  - task: "write image tags"
    file: (( grab meta.tasks.img-write-tags ))
    params:
      TAGS: (( grab meta.version ))
  - put: (( grab meta.name ))
    params:
      image: image/image.tar
      additional_tags: metadata/additional_tags

- name: "deploy"
  public: false
  plan:
  - get: (( grab meta.name ))
    passed: ["build"]
    trigger: true
  - put: deploy
    params: {}